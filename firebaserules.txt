rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    match /applications/{applicationId} {
      allow read: if isOwner(applicationId) || isAdmin();
      allow create: if isOwner(applicationId);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    match /rooms/{roomId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    match /payments/{paymentId} {
      allow read: if isOwner(paymentId) || isAdmin();
      allow create: if isOwner(paymentId);
      allow update, delete: if isAdmin();
    }

    match /{document=**} {
      allow read, write: if true;
    }
  }
}